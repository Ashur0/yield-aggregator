{
  "contractName": "Aggregator",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "test",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Justin Acevero/dev/Passion Projects/DAPP-University-Application-Project/dai-best-interest/src/contracts/Aggregator.sol\":\"Aggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Justin Acevero/dev/Passion Projects/DAPP-University-Application-Project/dai-best-interest/src/contracts/Aggregator.sol\":{\"keccak256\":\"0xc806b43d7a2a683903ea058e23ffc13f3d532c85113bcb478c0cb74e1aa44ee7\",\"urls\":[\"bzz-raw://a9e31dc85dcb093faa3d4efddb7cb2da92e8a35664b2c8c4e6e3cd3b8392aa41\",\"dweb:/ipfs/QmXBYR3tXyc3mCv5UYUVSh1ybHrGSeZptzMgbJL6ugZf6H\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280601381526020017f436f6e747261637420536d6f6b652054657374000000000000000000000000008152506000908051906020019061004f929190610062565b5034801561005c57600080fd5b50610107565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a357805160ff19168380011785556100d1565b828001600101855582156100d1579182015b828111156100d05782518255916020019190600101906100b5565b5b5090506100de91906100e2565b5090565b61010491905b808211156101005760008160009055506001016100e8565b5090565b90565b610186806101166000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f8a8fd6d14610030575b600080fd5b6100386100b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561007857808201518184015260208101905061005d565b50505050905090810190601f1680156100a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101495780601f1061011e57610100808354040283529160200191610149565b820191906000526020600020905b81548152906001019060200180831161012c57829003601f168201915b50505050508156fea265627a7a72315820460d61959c4e4b49165420c8a633548204189f2e2e47a8d82beb9d59b98a465664736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f8a8fd6d14610030575b600080fd5b6100386100b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561007857808201518184015260208101905061005d565b50505050905090810190601f1680156100a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101495780601f1061011e57610100808354040283529160200191610149565b820191906000526020600020905b81548152906001019060200180831161012c57829003601f168201915b50505050508156fea265627a7a72315820460d61959c4e4b49165420c8a633548204189f2e2e47a8d82beb9d59b98a465664736f6c63430005100032",
  "sourceMap": "28:1364:0:-;;;75:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;451:23;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:23:0;28:1364;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "28:1364:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28:1364:0;;;;;;;;;;;;;;;;;;;75:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;75:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.16;\r\n\r\ncontract Aggregator {\r\n    // Variables\r\n\r\n    string public test = \"Contract Smoke Test\";\r\n\r\n    /*\r\n        -- Variable that tracks the amount of DAI for a specific user\r\n        -- Variable that tracks which protocol currently holds the user's DAI? (Compound or Aave)\r\n    */\r\n\r\n    // Events\r\n\r\n    /*\r\n        [] Deposit event\r\n        [] Withdraw event\r\n        [] Rebalance event?\r\n    */\r\n\r\n    // Constructor\r\n    constructor() public {}\r\n\r\n    // Public Functions (Deposit, Withdraw, Rebalance)\r\n\r\n    /*\r\n        -- depositDAI()\r\n            When the user deposits DAI, we check Compound & Aave interest rates, determine best rate, and deposit into that protocol.\r\n\r\n        -- withdrawDAI()\r\n            We withdraw from the protocol, and send the funds back to the user.\r\n\r\n        -- rebalanceDAI()\r\n            When the user has funds already deposited & and user calls for a rebalance, \r\n            we check Compound & Aave interest rates, determine best rate, and deposit into that protocol. If\r\n            the protocol with the best interest rate does not have funds already in, withdraw from the other protocol,\r\n            and deposit into the better one\r\n\r\n    */\r\n\r\n    // Internal Functions\r\n\r\n    /*\r\n        -- _checkRates()\r\n            Responsible for checking interest rates, and returning the best one (Compound or Aave).\r\n    */\r\n}\r\n",
  "sourcePath": "C:/Users/Justin Acevero/dev/Passion Projects/DAPP-University-Application-Project/dai-best-interest/src/contracts/Aggregator.sol",
  "ast": {
    "absolutePath": "/C/Users/Justin Acevero/dev/Passion Projects/DAPP-University-Application-Project/dai-best-interest/src/contracts/Aggregator.sol",
    "exportedSymbols": {
      "Aggregator": [
        9
      ]
    },
    "id": 10,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9,
        "linearizedBaseContracts": [
          9
        ],
        "name": "Aggregator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "test",
            "nodeType": "VariableDeclaration",
            "scope": 9,
            "src": "75:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "75:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "436f6e747261637420536d6f6b652054657374",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "96:21:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_8d32da3888991f4e9baaaefadc74c75be404403afa31365d5548125f858f16bd",
                "typeString": "literal_string \"Contract Smoke Test\""
              },
              "value": "Contract Smoke Test"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7,
              "nodeType": "Block",
              "src": "472:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 8,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:2:0"
            },
            "returnParameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "472:0:0"
            },
            "scope": 9,
            "src": "451:23:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10,
        "src": "28:1364:0"
      }
    ],
    "src": "0:1394:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Justin Acevero/dev/Passion Projects/DAPP-University-Application-Project/dai-best-interest/src/contracts/Aggregator.sol",
    "exportedSymbols": {
      "Aggregator": [
        9
      ]
    },
    "id": 10,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9,
        "linearizedBaseContracts": [
          9
        ],
        "name": "Aggregator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "test",
            "nodeType": "VariableDeclaration",
            "scope": 9,
            "src": "75:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "75:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "436f6e747261637420536d6f6b652054657374",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "96:21:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_8d32da3888991f4e9baaaefadc74c75be404403afa31365d5548125f858f16bd",
                "typeString": "literal_string \"Contract Smoke Test\""
              },
              "value": "Contract Smoke Test"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7,
              "nodeType": "Block",
              "src": "472:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 8,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:2:0"
            },
            "returnParameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "472:0:0"
            },
            "scope": 9,
            "src": "451:23:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10,
        "src": "28:1364:0"
      }
    ],
    "src": "0:1394:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-09-18T02:33:14.073Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}